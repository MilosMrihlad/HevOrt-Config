[gcode_macro BEACON]
variable_beacon_contact_calibration_temp: 150                           # nozzle temperature for auto calibration
variable_beacon_contact_expansion_compensation: True                    # enables the nozzle thermal expansion compensation
variable_beacon_contact_expansion_multiplier: 1.0                       # multiplier for the nozzle thermal expansion compensation
variable_adaptive_mesh: False                                           # REQUIRES zero_reference_point to be setup in [bed_mesh]
# Do not modify below
gcode:

[gcode_macro FAST_Z_TILT]
gcode:
    M117 Z_TILT
    {% if printer.configfile.settings.z_tilt_adjust %}
        {% if printer.z_tilt_adjust.applied == False %}
            Z_TILT_ADJUST RETRY_TOLERANCE=1
        {% endif %}
        Z_TILT_ADJUST horizontal_move_z=2
    {% endif %} 

#####################################################################
#   print_start macro
#####################################################################

[gcode_macro START_PRINT]
gcode:
    # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
    {% set target_bed = params.BED|int %}
    {% set target_extruder = params.EXTRUDER|int %}
    {% set target_chamber = params.CHAMBER|default("40")|int %}

    # Collecting variables
    {% set z_hop = printer.configfile.settings['beacon'].home_z_hop|float %}
    {% set z_hop_speed = printer.configfile.settings['beacon'].home_z_hop_speed|float %}
    {% set beacon_contact_calibration_temp = printer["gcode_macro BEACON"].beacon_contact_calibration_temp|default(150)|int %}
    {% set adaptive_meshing = printer["gcode_macro BEACON"].adaptive_mesh|default(false) %}

	{% if printer.toolhead.homed_axes != "xyz" %}
        G28
        G1 Z{z_hop} F{z_hop_speed}                                                              # Moves to z_hop height
        G1 X10 Y0 F6000                                                                                       # Full home (XYZ)
    {% else %}
        G1 Z{z_hop} F{z_hop_speed}                                                              # Moves to z_hop height
        G1 X10 Y0 F6000                                                                        # Goes to center of the bed
    {% endif %}
    G90                                                                                         # Absolute positioning

	BED_MESH_CLEAR                                                                              # Clears old saved bed mesh (if any)
    SET_GCODE_OFFSET Z=0                                                                        # Clears current offset

    # If you don't change build plates then you may remove this by commenting it out
    G28 Z METHOD=CONTACT CALIBRATE=1                                                            # Calibrate z offset and beacon model hot
	
    # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
    SET_DISPLAY_TEXT MSG="Hotend: {beacon_contact_calibration_temp}c"                           # Displays info
    M109 S{beacon_contact_calibration_temp}                                                     # Heats up the nozzle to contact temps

    {% if printer.z_tilt is defined and not printer.z_tilt.applied %}
        SET_DISPLAY_TEXT MSG="Z-tilt adjust"                                                    # Displays info
        {% if printer.configfile.settings["gcode_macro FAST_Z_TILT"] is defined %}
            {% if printer.configfile.settings['beacon'].default_probe_method != contact %}
                FAST_Z_TILT                                                                     # Levels the buildplate via Z_TILT but FASTER
            {% endif %}
        {% else %}
            Z_TILT_ADJUST                                                                       # Levels the buildplate via Z_TILT
        {% endif %}
        G28 Z                                                                                   # Homes Z again after z_tilt_adjust
    {% endif %}

    ##  comment if you want to load a previous mesh
    SET_DISPLAY_TEXT MSG="Bed mesh"                                                             # Displays info
    {% if adaptive_meshing %}
        bed_mesh_calibrate ADAPTIVE=1                                                           # Runs an adaptive bed mesh
    {% else %}
        bed_mesh_calibrate                                                                      # Runs a bed mesh 
    {% endif %}

    G28 Z METHOD=CONTACT CALIBRATE=0                                                            # Calibrate z offset only after tilt/mesh


    # Heats up the nozzle up to target via data from slicer
    SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"                                           # Displays info 
    {% if printer.configfile.settings["gcode_macro SMART_PARK"] is defined %}
        SMART_PARK                                                                              # Parks using KAMP
    {% else %}
        G1 Z{z_hop} F{z_hop_speed}                                                              # Moves to z_hop height
        G1 X10 Y10 F6000                                                                        # Goes to center of the bed
    {% endif %}

	M107                                                                                        # Turns off partcooling fan
    M109 S{target_extruder}                                                                     # Heats the nozzle to printing temp
    
    {% if printer.configfile.settings["gcode_macro _BEACON_SET_NOZZLE_TEMP_OFFSET"] is defined %}
        _BEACON_SET_NOZZLE_TEMP_OFFSET                                                          # Adds toolhead expansion offset (REQUIRES ADDITIONAL MACROS NOT BY DEFAULT Found at:https://github.com/YanceyA/Beacon_Thermal_Expansion_Compensation )
    {% endif %}

    SET_GCODE_OFFSET Z_ADJUST=0                                                                 # Apply any additional offset u wish to apply
    PURGE_NOZZLE                                                                                # Purges the nozzle via macro if setup
    G90                                                                                         # Absolute positioning

[gcode_macro PURGE_NOZZLE]
gcode:
    G1 Z5 F1000
    G1 X10 Y0 F3000
    G1 Z0.3 F400            # Place Print Head at 1 layer height 
    G1 E8 F1000             # Refill Extruder with filament
    G1 X30 Y0 E20 F1000     # Start purge line
    G1 X220 Y0 E34 F1000    # Accelerate purge
    G1 Z5 E54 F800          # Squirt while lifting
    G1 E53.8 F6000          # Retraction
    G1 X235 F6000           # Move aside
    G92 E0                  # Reset Extruder position to Zero 

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    {% set X = params.X|default(150)|float %}
    {% set Y = params.Y|default(250)|float %}
    {% set Z = params.Z|default(10)|float %}
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-8 F1000
    M84
    TURN_OFF_HEATERS
    M106 S0
    CLEAR_PAUSE
    CLOSELOGGER
    INCR_SPEED_STOP
    BASE_CANCEL_PRINT
    SDCARD_RESET_FILE

[gcode_macro END_PRINT]
gcode:
    {% set X = params.X|default(150)|float %}
    {% set Y = params.Y|default(250)|float %}
    {% set Z = params.Z|default(10)|float %}
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F6000
    G91
    G1 E-8 F1000
    M84
    TURN_OFF_HEATERS
    M106 S0

[gcode_macro FORCED_PAUSE]
gcode:
	PAUSE

[gcode_macro M600]
gcode:
    {% set X = params.X|default(20)|float %}
    {% set Y = params.Y|default(20)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-60 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro POKELOOP]
gcode:
  {% for i in range(100) %}
      beacon_poke speed=3 top=5 bottom=-.6
  {% endfor %}

[gcode_macro enable_stepper]
gcode:
    SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
    SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=1
    SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
    SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=1